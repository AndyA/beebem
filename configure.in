AC_INIT

AC_CANONICAL_HOST
AC_CANONICAL_TARGET

AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(beebem,0.0.13)

AC_PROG_CC
AC_PROG_CXX
AC_PROG_RANLIB

AC_PROG_INSTALL

#AC_PROG_LIBTOOL



# dnl Checks for GTK libraries.
AM_PATH_GTK_2_0(2.2.0,,AC_MSG_ERROR(mypkgname 0.1 needs GTK+ 2.2.0))



dnl Check for SDL
SDL_VERSION=1.2.0
AM_PATH_SDL($SDL_VERSION,
            :,
            AC_MSG_ERROR([*** SDL version $SDL_VERSION not found!])
)
CXXFLAGS="$CXXFLAGS $SDL_CFLAGS"
CFLAGS="$CFLAGS $SDL_CFLAGS"
LIBS="$LIBS $SDL_LIBS"



#==============================================================================

AC_CHECK_HEADERS(zlib.h)
AC_CHECK_LIB(z, zlibVersion)

#==============================================================================

# EXAMPLE:
#
#AC_ARG_WITH(debugger,
#  [  --with-debugger         compile with additional logging],
#  ,  withval="yes"
#)
#
#AC_ARG_WITH(debugger,
#  [  --without-debugger      compile without additional logging],
#  ,  withval="no"
#)
#
#if test "$withval" = "yes"; then
#  AC_DEFINE(WITH_DEBUG_OUTPUT, 1, "with additional debugging")
#  echo "compile with debugger (--with-debugger)"
#else
#  echo "compile without debugger (--without-debugger)"
#fi

echo "--------------------------------------------------------------------"
echo "BeebEm will:"
echo ""

AC_ARG_ENABLE(debugging,
  [  --enable-debugging         (BeebEm) Enable extra debugging output],
  enableval="yes", enableval="no"
  )

#AC_ARG_ENABLE(debugging,
#  [  --disable-debugging     Disable debug],
#  , enableval="no"
#)

if test "$enableval" = "yes"; then
  AC_DEFINE(WITH_DEBUG_OUTPUT, 1, "with additional debugging")
  AC_DEFINE(EG_DEBUG, 1, "GUI debugging code")
  echo "compile with debugging output"
else
  AC_DEFINE(WITHOUT_LEVEL_INDICATOR, 1, "Disable level indicator")
  AC_DEFINE(WITHOUT_SHENANIGANS, 1, "Disable all __LINE__ shenanigans")
  echo "compile without debugging output"
fi


AC_ARG_ENABLE(econet,
  [  --enable-econet            (BeebEm) Enable econet support (UNIX only)],
  enableval="yes", enableval="no"
  )

if test "$enableval" = "yes"; then
  AC_DEFINE(WITH_ECONET, 1, "with econet support (UNIX only)")
  echo "compile with econet support"
else
  echo "compile without econet support"
fi

AC_ARG_ENABLE(realtime_slider,
  [  --disable-realtime-slider  (BeebEm) Disable realtime slider],
  enableval="no", enableval="yes"
  )

if test "$enableval" = "yes"; then
  echo "compile with realtime slider on slide bar"
else
  AC_DEFINE(WITHOUT_REALTIME_SLIDER, 1, "without realtime slider")
  echo "compile without realtime slider on slide bar"
fi


AC_ARG_ENABLE(welcome_message,
  [  --disable-welcome_message  (BeebEm) Disable welcome message],
  enableval="no", enableval="yes"
  )

if test "$enableval" = "yes"; then
  echo "compile with welcome message"
else
  AC_DEFINE(WITHOUT_WELCOME_MESSAGE, 1, "without annoying welcome message")
  echo "compile without welcome message"
fi



AC_ARG_ENABLE(fs-fps,
  [  --disable-fs-fps 	     (BeebEm) Disable FPS indicator when fullscreen],
  enableval="no", enableval="yes"
)
if test "$enableval" = "yes"; then
  AC_DEFINE(WITH_FS_FPS, 1, "With Fullscreen FPS")
  echo "compile with fullscreen FPS indicator"
else
  echo "compile without fullscreen FPS indicator"
fi



AC_ARG_ENABLE(system-cp,
  [  --disable-system-cp        (BeebEm) Use slower C file copy instead of 'cp'],
  enableval="no", enableval="yes"
)
if test "$enableval" = "yes"; then
  AC_DEFINE(WITH_SYSTEM_CP, 1, "With system 'cp' command")
  echo "compile with call to system 'cp' command when copying files"
else
  echo "compile with internal (slow) C code when copying files"
fi

AC_ARG_ENABLE(force-colormap,
  [  --disable-force-colormap   (BeebEm) Do not force colormap for 8 bit color],
  enableval="no", enableval="yes"
)
if test "$enableval" = "yes"; then
  AC_DEFINE(WITH_FORCED_CM, 1, "With forced colormap for 8 bit displays")
  echo "compile with a forced colormap for 8 bit displays"
else
  echo "compile without a forced colormap for 8 bit displays (may distort colors)."
fi

#==============================================================================

AC_DEFINE(WITH_UNIX_EXTRAS, 1, "Enable UNIX extras")
AC_DEFINE(REG_FILENAME, "beebem.registry", "Fake windows registry filename")

#AC_ARG_ENABLE(shenanigans,
#  [  --enable-shenanigans    Enable debug],
#  , enableval="yes"
#  )
#
#AC_ARG_ENABLE(shenanigans,
#  [  --disable-shenanigans   Disable debug],
#  , enableval="no"
#)
#
##echo "shan=$enableval"
#if test "$enableval" = "yes"; then
#  AC_DEFINE(WITHOUT_SHENANIGANS, 1, "Disable all __LINE__ shenanigans")
#fi

#==============================================================================

#AC_ARG_ENABLE(indicator,
#  [  --enable-indicator      Enable debug],
#  , enableval="yes"
#  )
#
#AC_ARG_ENABLE(indicator,
#  [  --disable-indicator     Disable debug],
#  , enableval="no"
#)
#
##echo "ind=$enableval"
#if test "$enableval" = "yes"; then
#  AC_DEFINE(WITHOUT_LEVEL_INDICATOR, 1, "Disable level indicator")
#fi

echo "--------------------------------------------------------------------"

#==============================================================================



AC_SUBST(CFLAGS)
AC_SUBST(LIBS)

AC_OUTPUT(Makefile doc/Makefile m4/Makefile src/Makefile src/gui/Makefile data/Makefile)

#echo ""; echo "(end)"
